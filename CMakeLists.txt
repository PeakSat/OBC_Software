cmake_minimum_required(VERSION 3.19.2)
project(OBC_SOFTWARE C CXX ASM)

set(CMAKE_CXX_STANDARD 17)

# Linker Script
set(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/src/config/default/ATSAMV71Q21B.ld)
set(CMAKE_EXE_LINKER_FLAGS_INIT "-Wl,-gc-sections,--print-memory-usage -T ${LINKER_SCRIPT}")

# Definitions
add_definitions(-DARM_MATH_CM7 -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -D__FPU_PRESENT=1)

find_package(etl CONFIG REQUIRED)
find_package(logger CONFIG REQUIRED COMPONENTS log_common)

# Include directories
include_directories(
        ${CMAKE_SOURCE_DIR}
        inc
        inc/FreeRTOSTasks
        inc/Platform
        inc/Platform/Parameters
        inc/Platform/CAN
        inc/Platform/RS422
        inc/Platform/ADM
        inc/Helpers
        src
        src/config
        src/config/default
        src/config/default/osal
        src/config/default/driver
        src/config/default/driver/i2c
        src/config/default/driver/i2c/src
        src/config/default/peripheral/clk
        src/config/default/peripheral/efc
        src/config/default/peripheral/nvic
        src/config/default/peripheral/pio
        src/config/default/peripheral/rtc
        src/config/default/peripheral/systick
        src/config/default/peripheral/twihs/master
        src/config/default/system
        src/config/default/system/cache
        src/config/default/system/debug
        src/config/default/system/int
        src/config/default/system/time
        src/config/default/system/time/src
        src/third_party/rtos/FreeRTOS
        src/third_party/rtos/FreeRTOS/Source
        src/third_party/rtos/FreeRTOS/Source/include
        src/third_party/rtos/FreeRTOS/Source/portable
        src/third_party/rtos/FreeRTOS/Source/portable/GCC
        src/third_party/rtos/FreeRTOS/Source/portable/GCC/SAM
        src/third_party/rtos/FreeRTOS/Source/portable/GCC/SAM/CM7
        src/third_party/rtos/FreeRTOS/Source/portable/MemMang
        lib/ECSS/inc
        lib/ECSS/inc/etl
        lib/ECSS/inc/Helpers
        lib/ECSS/inc/Services
        lib/ECSS/inc/Time
        src/packs
        src/packs/ATSAMV71Q21B_DFP
        src/packs/ATSAMV71Q21B_DFP/component
        src/packs/ATSAMV71Q21B_DFP/instance
        src/packs/ATSAMV71Q21B_DFP/pio
        src/packs/CMSIS
        src/packs/CMSIS/CMSIS
        src/packs/CMSIS/CMSIS/Core
        src/packs/CMSIS/CMSIS/Core/Include
        AutoGenerated.X
        AutoGenerated.X/dist
        AutoGenerated.X/dist/default
        AutoGenerated.X/dist/default/production
        AutoGenerated.X/nbproject
        AutoGenerated.X/nbproject/private
        /opt/microchip/mplabx/v5.45/packs/arm/CMSIS/5.4.0/CMSIS/Core/Include/
        lib/SEGGER/RTT
        lib/SEGGER/Config
        lib/Peripherals/MCP9808/inc
        lib/Peripherals/SMC/inc
        lib/Peripherals/MRAM/inc
        lib/Peripherals/MRAM/src
        lib/Peripherals/LCL/inc
        lib/Peripherals/NANDFlash/inc
        lib/Peripherals/NANDFlash/MT29F_Nand_Driver_Micron
        lib/Peripherals/NANDFlash/src
        lib/Peripherals/COBS
        lib/Peripherals/ADM
        lib/Peripherals/LittleFS/inc
        lib/Peripherals/PeakSat_HAL/I2C_HAL/inc
        lib/Peripherals/EPS/inc
)

# Show and add GitHash to code
include(CheckGit.cmake)
CheckGitSetup()

# Source files
file(GLOB_RECURSE DRIVER_SOURCES
        "src/config/default/driver/i2c/src/*.c"
        "lib/Peripherals/MCP9808/*.cpp"
        "lib/Peripherals/LCL/*.cpp"
        "lib/Peripherals/NANDFlash/*.cpp"
        "lib/Peripherals/MRAM/*.cpp"
        "lib/Peripherals/EPS/*.cpp"
        "lib/Peripherals/LittleFS/*.c"
        "lib/SEGGER/RTT/*.c"
)
file(GLOB_RECURSE SOURCES "src/*.c" "src/*.cpp" "AutoGenerated.X/*.c")

file(GLOB_RECURSE FREERTOS_SOURCES "src/third_party/rtos/FreeRTOS/*.c")
file(GLOB_RECURSE ECSS_SOURCES "lib/ECSS/src/*.cpp" "lib/ECSS/src/Helpers/*.cpp" "lib/ECSS/src/Services/*.cpp" "lib/ECSS/src/Time/*.cpp")
file(GLOB_RECURSE EXTRA_SOURCES "lib/Peripherals/COBS/cobs.c" "lib/Peripherals/COBS/cobsr.c")

# Build the executable
add_executable(${PROJECT_NAME}.elf
        ${SOURCES}
        ${LINKER_SCRIPT}
        ${FREERTOS_SOURCES}
        ${ECSS_SOURCES}
        ${DRIVER_SOURCES}
        ${EXTRA_SOURCES}
)

# Link libraries
target_link_libraries(${PROJECT_NAME}.elf PRIVATE etl log_common git_version)

# Set linker flags
set(CMAKE_EXE_LINKER_FLAGS
        "${CMAKE_EXE_LINKER_FLAGS_INIT} -Wl,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map"
)

# Compiler definitions
add_compile_definitions(LOGLEVEL_TRACE)
